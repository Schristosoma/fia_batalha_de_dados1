{"paragraphs":[{"title":"Exibir databases","text":"%pyspark\nspark.sql(\"show databases\").show()\n","user":"anonymous","dateUpdated":"2018-12-08T14:07:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544276550654_1715763044","id":"20181208-134230_1861185261","dateCreated":"2018-12-08T13:42:30+0000","status":"ABORT","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:726"},{"title":"Acessar database e exibir tabelas","text":"%pyspark\nspark.sql(\"use sessions_ecommerce\")\nspark.sql(\"show tables\").show()","user":"anonymous","dateUpdated":"2018-12-08T14:07:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544276579085_-1714004623","id":"20181208-134259_1561086742","dateCreated":"2018-12-08T13:42:59+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:727"},{"title":"selecionar tabela rawdata","text":"%pyspark\ndf = spark.sql(\"select * from sessions_ecommerce.rawdata\")\ndf.show()","user":"anonymous","dateUpdated":"2018-12-08T14:07:28+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544276700131_1313224384","id":"20181208-134500_546755517","dateCreated":"2018-12-08T13:45:00+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:728"},{"title":"Também é possível acessar diretamente o S3 em vez de ler tabelas","text":"%pyspark\n# substitua o <bucket-name> pelo nome do seu bucket. Coloque ano, mes, dia e hora que exista no seu bucket s3. \n# df = spark.read.json(\"s3://<bucket-name>/rawdata/ano/mes/dia/hora/\")\ndf = spark.read.json(\"s3://samuel-schmidt-demo-ecomm-bucket-stream/rawdata/2018/12/08/05/\")\ndf.show()","user":"anonymous","dateUpdated":"2018-12-08T14:22:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544276740378_-1551773894","id":"20181208-134540_1669931981","dateCreated":"2018-12-08T13:45:40+0000","status":"ABORT","progressUpdateIntervalMs":500,"$$hashKey":"object:729"},{"text":"%pyspark\n# substitua o <bucket-name> pelo nome do seu bucket. Coloque ano, mes, dia e hora que exista no seu bucket s3\n# df = spark.read.csv(\"s3://<bucket-name>/aggregated/ano/mes/dia/hora/\")\ndf2 = spark.read.csv(\"s3://samuel-schmidt-demo-ecomm-bucket-stream/aggregated/2018/12/08/05/\")\ndf2.show()","user":"anonymous","dateUpdated":"2018-12-08T14:22:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544277932751_1188834130","id":"20181208-140532_192880319","dateCreated":"2018-12-08T14:05:32+0000","status":"ABORT","progressUpdateIntervalMs":500,"$$hashKey":"object:730"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-12-08T14:20:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544278815738_-687363291","id":"20181208-142015_843178133","dateCreated":"2018-12-08T14:20:15+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1133"}],"name":"batalha_de_dados_exemplos_zeppelin_pyspark","id":"2DWEUP4XZ","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}